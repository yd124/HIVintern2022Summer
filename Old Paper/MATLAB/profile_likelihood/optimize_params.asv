cd('~/Documents/GitHub/HIVintern2022Summer/Old Paper/MATLAB/profile_likelihood/')
% '/Users/yuqingdai/Documents/GitHub/HIVintern2022Summer/Old Paper/MATLAB/profile_likelihood/predV.m';
% which predV.m -all;
%  which predV
% @pred.m; 

data = readtable('../../data/data1/logvRNA.csv');
patients = unique(data.patient,'stable');

x1 = [0.409E-6, 0.233E-6, 0.249, 0.775, 14.5E3, 0.03, 7];
x2 = [0.431E-6, 0.140E-6, 0.077, 0.420, 10E3, 0.021, 24];
x3 = [0.201E-6, 0.001E-6, 0.013, 1.048, 30.172E3, 0.036, 10];
x4 = [9.203E-6, 0.011E-6, 0.013, 0.851, 0.548E3, 0.055, 12];
x5 = [0.485E-6, 0.291E-6, 0.096, 0.803, 11.425E3, 0.033, 5];
x6 = [0.057E-6, 0.004E-6, 0.021, 0.821, 89.892E3, 0.003, 22];

x = [x1;x2;x3;x4;x5;x6];

parfor i = 1:length(patients)
    xx = x(i,:);
    sub_data = data(data.patient == string(patients(i)),:);
    dpi = sub_data.dpi;
    
    y = sub_data.log_vRNA;
    y_hat = pred(xx,dpi);
    L[i] = []
%     [opt_params,fval] = best_param(xx,dpi,y);
%     disp(fval);

end

% %% Decay Function 
% function out=b(t,b0,bi,k,tau)
%     if t <= tau
%         out = b0;
%     else
%         out = bi+(b0-bi)*exp(-k*(t-tau));
%     end
% end
% 
% %% Predicting V by Using Viral Dynamic Model
% function out = pred(params,dpi)
%     h = 0.01;
%     ti = 0:h:dpi(end);
%     init = [10^4 0 10^-3];
% 
%     b0 = params(1);
%     bi = params(2);
%     k = params(3);
%     dlt = params(4);
%     p = params(5);
%     d = params(6);
%     tau = params(7);
% 
%     f = @(t,x) [d*(init(1)-x(1))-b(t,b0,bi,k,tau)*x(1)*x(3);...
%             b(t,b0,bi,k,tau)*x(1)*x(3)-dlt*x(2);...
%             p*x(2)-23*x(3) ];    
% 
%     [t,xa] = ode45(f,ti,init);
%     V = xa(:,3);
%     try
%         out = log10(V(dpi/h+1));
%     catch 
%         out = zeros(size(dpi));
%     end
% end


% %% Least Squared Error
% function out=J(params,dpi,y)
%     y_hat = pred(params,dpi);
%     out =  1/size(y,1) *sum((y-y_hat).^2);
% end
% 
% function [x,fval]=best_param(x0,dpi,y) 
%     options = optimset('TolFun',1e-4,'TolX',1e-4,'MaxFunEvals', 4000,'MaxIter',4000);
%     JJ = @(params) J(params,dpi,y); 
%     [x,fval] = fminsearch(JJ,x0,options);
% end 